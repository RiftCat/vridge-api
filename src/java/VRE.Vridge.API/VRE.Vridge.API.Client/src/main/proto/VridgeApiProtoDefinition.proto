syntax = "proto2";
option java_multiple_files = true;
option optimize_for = LITE_RUNTIME;

package com.riftcat.vridge.api.client.java.proto;
message Beacon {
   optional BeaconOrigin Role = 1 [default = Server];
   optional string MachineName = 2;
   optional string UserName = 3;
   optional string HumanReadableVersion = 4;
}
enum BeaconOrigin {
   Server = 0;
   Client = 1;
}
message ControllerStateRequest {
   optional int32 Version = 1 [default = 0];
   optional uint32 TaskType = 2 [default = 0];
   optional VRController ControllerState = 4;
}
message ControllerStateResponse {
   optional int32 Version = 1 [default = 0];
   optional uint32 ReplyCode = 2 [default = 0];
}
enum HandType {
   Left = 0;
   Right = 1;
}
message HapticPulse {
   optional int32 ControllerId = 1 [default = 0];
   optional uint32 LengthUs = 2 [default = 0];
   optional uint32 TimestampUs = 3 [default = 0];
}
enum HeadRelation {
   Unrelated = 0;
   IsInHeadSpace = 1;
   SticksToHead = 2;
}
message HeadTrackingRequest {
   optional int32 Version = 1 [default = 0];
   optional uint32 TaskType = 2 [default = 0];
   optional bytes Data = 3;
}
message HeadTrackingResponse {
   optional int32 Version = 1 [default = 0];
   optional uint32 ReplyCode = 2 [default = 0];
   repeated float Data = 3;
   optional TrackedPose TrackedPose = 4;
}
message TrackedPose {
   repeated float HeadOrientation = 1;
   repeated float HeadPosition = 2;
   optional float RecenterYawOffset = 3 [default = 0];
   optional float ApiYawOffset = 4 [default = 0];
}
message VRController {
   optional int32 ControllerId = 1 [default = 0];
   optional int32 Status = 2 [default = 0];
   repeated float OrientationMatrix = 3;
   optional VRControllerState_t ButtonState = 4;
   repeated double Acceleration = 5;
   repeated double Velocity = 6;
   optional HeadRelation HeadRelation = 7 [default = Unrelated];
   optional HandType SuggestedHand = 8 [default = Left];
   optional double Timestamp = 9 [default = 0];
   optional string Name = 11;
   repeated float Position = 12;
   repeated float Orientation = 13;
}
message VRControllerAxis_t {
   optional float x = 1 [default = 0];
   optional float y = 2 [default = 0];
}
message VRControllerState_t {
   optional uint32 unPacketNum = 1 [default = 0];
   optional uint64 ulButtonPressed = 2 [default = 0];
   optional uint64 ulButtonTouched = 3 [default = 0];
   optional VRControllerAxis_t rAxis0 = 4;
   optional VRControllerAxis_t rAxis1 = 5;
   optional VRControllerAxis_t rAxis2 = 7;
   optional VRControllerAxis_t rAxis3 = 8;
   optional VRControllerAxis_t rAxis4 = 9;
}
